package greendao;

import java.util.List;
import greendao.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table CUSTOMER.
 */
public class Customer {

    private Long id;
    private String customerName;
    private String customerEmail;
    private String customerPhone;
    private Double customerPoint;
    private String customerGroup;
    private String customerCode;
    private String customerID;
    private String company;
    private Double voucherMin;
    private Double voucherMax;
    private Boolean isFixedAmount;
    private Double fixedAmount;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient CustomerDao myDao;

    private List<Voucher> voucherList;

    public Customer() {
    }

    public Customer(Long id) {
        this.id = id;
    }

    public Customer(Long id, String customerName, String customerEmail, String customerPhone, Double customerPoint, String customerGroup, String customerCode, String customerID, String company, Double voucherMin, Double voucherMax, Boolean isFixedAmount, Double fixedAmount) {
        this.id = id;
        this.customerName = customerName;
        this.customerEmail = customerEmail;
        this.customerPhone = customerPhone;
        this.customerPoint = customerPoint;
        this.customerGroup = customerGroup;
        this.customerCode = customerCode;
        this.customerID = customerID;
        this.company = company;
        this.voucherMin = voucherMin;
        this.voucherMax = voucherMax;
        this.isFixedAmount = isFixedAmount;
        this.fixedAmount = fixedAmount;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getCustomerDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCustomerName() {
        return customerName;
    }

    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    public String getCustomerEmail() {
        return customerEmail;
    }

    public void setCustomerEmail(String customerEmail) {
        this.customerEmail = customerEmail;
    }

    public String getCustomerPhone() {
        return customerPhone;
    }

    public void setCustomerPhone(String customerPhone) {
        this.customerPhone = customerPhone;
    }

    public Double getCustomerPoint() {
        return customerPoint;
    }

    public void setCustomerPoint(Double customerPoint) {
        this.customerPoint = customerPoint;
    }

    public String getCustomerGroup() {
        return customerGroup;
    }

    public void setCustomerGroup(String customerGroup) {
        this.customerGroup = customerGroup;
    }

    public String getCustomerCode() {
        return customerCode;
    }

    public void setCustomerCode(String customerCode) {
        this.customerCode = customerCode;
    }

    public String getCustomerID() {
        return customerID;
    }

    public void setCustomerID(String customerID) {
        this.customerID = customerID;
    }

    public String getCompany() {
        return company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    public Double getVoucherMin() {
        return voucherMin;
    }

    public void setVoucherMin(Double voucherMin) {
        this.voucherMin = voucherMin;
    }

    public Double getVoucherMax() {
        return voucherMax;
    }

    public void setVoucherMax(Double voucherMax) {
        this.voucherMax = voucherMax;
    }

    public Boolean getIsFixedAmount() {
        return isFixedAmount;
    }

    public void setIsFixedAmount(Boolean isFixedAmount) {
        this.isFixedAmount = isFixedAmount;
    }

    public Double getFixedAmount() {
        return fixedAmount;
    }

    public void setFixedAmount(Double fixedAmount) {
        this.fixedAmount = fixedAmount;
    }

    /** To-many relationship, resolved on first access (and after reset). Changes to to-many relations are not persisted, make changes to the target entity. */
    public List<Voucher> getVoucherList() {
        if (voucherList == null) {
            if (daoSession == null) {
                throw new DaoException("Entity is detached from DAO context");
            }
            VoucherDao targetDao = daoSession.getVoucherDao();
            List<Voucher> voucherListNew = targetDao._queryCustomer_VoucherList(id);
            synchronized (this) {
                if(voucherList == null) {
                    voucherList = voucherListNew;
                }
            }
        }
        return voucherList;
    }

    /** Resets a to-many relationship, making the next get call to query for a fresh result. */
    public synchronized void resetVoucherList() {
        voucherList = null;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

}
